[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 15.0.1)
[debug] Load.defaultLoad until apply took 254.7972ms
[debug]           Load.loadUnit: plugins took 56.2014ms
[debug]           Load.loadUnit: defsScala took 0.2008ms
[debug] [Loading] Scanning directory C:\Users\vishn\IdeaProjects\spark-file-splitter\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.6357 ms
[debug]               Load.resolveProject(spark-file-splitter-build) took 29.6325ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-file-splitter-build, base: C:\Users\vishn\IdeaProjects\spark-file-splitter\project, plugins: List(<none>))) took 60.251ms
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter\project, returning: (spark-file-splitter-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 73.8925ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.2099ms
[debug]         Load.loadUnit(file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/project/, ...) took 134.6872ms
[debug]       Load.apply: load took 244.83ms
[debug]       Load.apply: resolveProjects took 4.4131ms
[debug]       Load.apply: finalTransforms took 53.8969ms
[debug]       Load.apply: config.delegates took 5.3836ms
[debug]       Load.apply: Def.make(settings)... took 1014.1897ms
[debug]       Load.apply: structureIndex took 73.3255ms
[debug]       Load.apply: mkStreams took 1.0926ms
[info] loading project definition from C:\Users\vishn\IdeaProjects\spark-file-splitter\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3195.9059ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\vishn\IdeaProjects\spark-file-splitter
[debug]       Load.loadUnit: mkEval took 4.1111ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2584 ms
[info] loading settings for project spark-file-splitter from build.sbt ...
[debug]         Load.resolveProject(spark-file-splitter) took 2.2176ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spark-file-splitter, base: C:\Users\vishn\IdeaProjects\spark-file-splitter, plugins: List(<none>))) took 3.8963ms
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter, returning: (spark-file-splitter)
[debug]     Load.loadUnit: loadedProjectsRaw took 1525.5059ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.1056ms
[debug]   Load.loadUnit(file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/, ...) took 4729.7221ms
[debug] Load.apply: load took 4744.6592ms
[debug] Load.apply: resolveProjects took 0.1068ms
[debug] Load.apply: finalTransforms took 6.3253ms
[debug] Load.apply: config.delegates took 0.2598ms
[debug] Load.apply: Def.make(settings)... took 48.6489ms
[debug] Load.apply: structureIndex took 19.58ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to spark-file-splitter (in build file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-47cfb1b806fd81b4f82d
[debug] Forcing garbage collection...
