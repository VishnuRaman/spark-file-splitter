[debug] > Exec(;reload; set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers" ;*/*:dumpStructureTo C:/Users/vishn/AppData/Local/Temp/sbt-structure.xml; session clear-all ; set ideaPort in Global := 51622, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.2 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 16.2116ms
[debug]       Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Users\vishn\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vishn\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.9072 ms
[debug]           Load.resolveProject(global-plugins) took 0.8095ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\vishn\.sbt\1.0\plugins, plugins: List(<none>))) took 1.972ms
[debug] [Loading] Done in C:\Users\vishn\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2.5254ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0062ms
[debug]     Load.loadUnit(file:/C:/Users/vishn/.sbt/1.0/plugins/, ...) took 20.4022ms
[debug]   Load.apply: load took 21.2457ms
[debug]   Load.apply: resolveProjects took 0.0713ms
[debug]   Load.apply: finalTransforms took 3.3318ms
[debug]   Load.apply: config.delegates took 0.196ms
[debug]   Load.apply: Def.make(settings)... took 28.3102ms
[debug]   Load.apply: structureIndex took 8.0173ms
[debug]   Load.apply: mkStreams took 0.0132ms
[info] loading global plugins from C:\Users\vishn\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 357.8363ms
[debug]           Load.loadUnit: plugins took 15.2718ms
[debug]           Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\vishn\IdeaProjects\spark-file-splitter\project
[debug]             Load.loadUnit: mkEval took 0.3018ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.8438 ms
[info] loading settings for project spark-file-splitter-build from idea.sbt ...
[debug]               Load.resolveProject(spark-file-splitter-build) took 0.9607ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-file-splitter-build, base: C:\Users\vishn\IdeaProjects\spark-file-splitter\project, plugins: List(<none>))) took 2.1116ms
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter\project, returning: (spark-file-splitter-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 13.5307ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.2384ms
[debug]         Load.loadUnit(file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/project/, ...) took 31.4282ms
[debug]       Load.apply: load took 32.243ms
[debug]       Load.apply: resolveProjects took 0.0759ms
[debug]       Load.apply: finalTransforms took 3.9095ms
[debug]       Load.apply: config.delegates took 0.229ms
[debug]       Load.apply: Def.make(settings)... took 30.5674ms
[debug]       Load.apply: structureIndex took 7.8807ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\Users\vishn\IdeaProjects\spark-file-splitter\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 203.86ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\vishn\IdeaProjects\spark-file-splitter
[debug]       Load.loadUnit: mkEval took 0.2397ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.8643 ms
[info] loading settings for project spark-file-splitter from build.sbt ...
[debug]         Load.resolveProject(spark-file-splitter) took 20.4545ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spark-file-splitter, base: C:\Users\vishn\IdeaProjects\spark-file-splitter, plugins: List(<none>))) took 21.6318ms
[debug] [Loading] Done in C:\Users\vishn\IdeaProjects\spark-file-splitter, returning: (spark-file-splitter)
[debug]     Load.loadUnit: loadedProjectsRaw took 770.0573ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.7943ms
[debug]   Load.loadUnit(file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/, ...) took 999.123ms
[debug] Load.apply: load took 1000.1482ms
[debug] Load.apply: resolveProjects took 0.0589ms
[debug] Load.apply: finalTransforms took 9.2728ms
[debug] Load.apply: config.delegates took 0.1477ms
[debug] Load.apply: Def.make(settings)... took 36.5587ms
[debug] Load.apply: structureIndex took 16.6649ms
[debug] Load.apply: mkStreams took 0.003ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to spark-file-splitter (in build file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(set _root_.org.jetbrains.sbt.StructureKeys.sbtStructureOptions in Global := "download resolveClassifiers resolveSbtClassifiers", None, None)
[info] Defining Global / sbtStructureOptions
[info] The new value will be used by Global / ssOptions
[debug] Defining 
[debug] 	Global / sbtStructureOptions
[debug] 
[debug] The new value will be used by 
[debug] 	Global / ssOptions
[info] Reapplying settings...
[info] set current project to spark-file-splitter (in build file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/)
[debug] > Exec(*/*:dumpStructureTo C:/Users/vishn/AppData/Local/Temp/sbt-structure.xml, None, None)
[debug] Evaluating tasks: Global / dumpStructureTo
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[warn] There may be incompatibilities among your library dependencies; run 'evicted' to see detailed eviction warnings.
[info] Writing structure to C:\Users\vishn\AppData\Local\Temp\sbt-structure.xml...
[info] Done.
[success] Total time: 69 s (01:09), completed 9 Nov 2020, 12:03:00
[debug] > Exec(session clear-all, None, None)
[info] Reapplying settings...
[info] set current project to spark-file-splitter (in build file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/)
[debug] > Exec(set ideaPort in Global := 51622, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to spark-file-splitter (in build file:/C:/Users/vishn/IdeaProjects/spark-file-splitter/)
[debug] > Exec(idea-shell, None, None)
[debug] > Exec(, None, None)
[debug] > Exec(idea-shell, None, None)
